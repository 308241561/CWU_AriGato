<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.ald.softbankrobotics.com/schema/choregraphe/project.xsd" xar_version="3">
  <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0">
    <bitmap>media/images/box/root.png</bitmap>
    <script language="4">
      <content>
        <![CDATA[]]>
      </content>
    </script>
    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
    <Timeline enable="0">
      <BehaviorLayer name="behavior_layer1">
        <BehaviorKeyframe name="keyframe1" index="1">
          <Diagram>
            <Box name="RaiseRightFoot" id="1" localization="8" tooltip="NAO raises its right foot into the air." x="244" y="104">
              <bitmap>media/images/box/box-python-script.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        # Create initial proxies:
        motionProxy = ALProxy("ALMotion")
        postureProxy = ALProxy("ALRobotPosture")

        # Wake NAO Up:
        motionProxy.wakeUp()

        # Set NAO to the Init Position:
        postureProxy.goToPosture("StandInit", 0.5)

        # Activate Whole Body Balancer:
        isEnabled = True
        motionProxy.wbEnable(isEnabled)

        # Constrain legs into a fixed plane:
        stateName = "Fixed"
        supportLeg = "Legs"
        motionProxy.wbFootState(stateName, supportLeg)

        # Balance constraint:
        isEnabledTwo = True
        supportLeg = "Legs"
        motionProxy.wbEnableBalanceConstraint(isEnabledTwo, supportLeg)

        # Balance on left leg:
        supportLeg = "LLeg"
        duration = 2.0
        motionProxy.wbGoToBalance(supportLeg, duration)

        # Right leg motion:
        stateName = "Free"
        supportLeg = "RLeg"
        motionProxy.wbFootState(stateName, supportLeg)
        effector = "RLeg"
        axisMask = 63
        frame = motion.FRAME_WORLD
        times = [2.0, 2.7, 4.5]

        isActive = False
        motionProxy.wbEnableEffectorOptimization(effector, isActive)

        time.sleep(1.0)

        # Deactivate balance features:
        isEnabled = False
        motionProxy.wbEnable(isEnabled)

        # Send NAO back to Init position:
        postureProxy.goToPosture("StandInit", 0.3)

        self.onStopped()


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
            </Box>
            <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
            <Link inputowner="0" indexofinput="4" outputowner="1" indexofoutput="4" />
          </Diagram>
        </BehaviorKeyframe>
      </BehaviorLayer>
    </Timeline>
  </Box>
</ChoregrapheProject>
